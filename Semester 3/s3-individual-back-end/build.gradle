plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.sonarqube' version '3.0'
	id 'jacoco' // apply the jacoco plugin, a core Gradle plugin
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// configure the plugin to output test reports in the XML format required by SonarQube
jacocoTestReport {
	reports {
		xml.enabled true
	}
}

// use finalizedBy to ensure that the test report is always generated after tests are run
test.finalizedBy jacocoTestReport

// to ensure the Jacoco test report is always created when we run the sonarqube task
// letâ€™s setup the following dependsOn relationship:
tasks.named('sonarqube').configure {
	dependsOn test
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.flywaydb:flyway-core:9.1.6'
	implementation 'org.flywaydb:flyway-mysql:9.1.6'
	implementation 'mysql:mysql-connector-java:8.0.30'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.3'
	testImplementation 'com.playtika.testcontainers:embedded-mysql:2.2.5'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
